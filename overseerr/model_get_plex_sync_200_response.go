/*
Overseerr API

This is the documentation for the Overseerr API backend.  Two primary authentication methods are supported:  - **Cookie Authentication**: A valid sign-in to the `/auth/plex` or `/auth/local` will generate a valid authentication cookie. - **API Key Authentication**: Sign-in is also possible by passing an `X-Api-Key` header along with a valid API Key generated by Overseerr. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package overseerr

import (
	"encoding/json"
)

// GetPlexSync200Response struct for GetPlexSync200Response
type GetPlexSync200Response struct {
	Running *bool `json:"running,omitempty"`
	Progress *float32 `json:"progress,omitempty"`
	Total *float32 `json:"total,omitempty"`
	CurrentLibrary *PlexLibrary `json:"currentLibrary,omitempty"`
	Libraries []*PlexLibrary `json:"libraries,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetPlexSync200Response GetPlexSync200Response

// NewGetPlexSync200Response instantiates a new GetPlexSync200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPlexSync200Response() *GetPlexSync200Response {
	this := GetPlexSync200Response{}
	return &this
}

// NewGetPlexSync200ResponseWithDefaults instantiates a new GetPlexSync200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPlexSync200ResponseWithDefaults() *GetPlexSync200Response {
	this := GetPlexSync200Response{}
	return &this
}

// GetRunning returns the Running field value if set, zero value otherwise.
func (o *GetPlexSync200Response) GetRunning() bool {
	if o == nil || isNil(o.Running) {
		var ret bool
		return ret
	}
	return *o.Running
}

// GetRunningOk returns a tuple with the Running field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlexSync200Response) GetRunningOk() (*bool, bool) {
	if o == nil || isNil(o.Running) {
    return nil, false
	}
	return o.Running, true
}

// HasRunning returns a boolean if a field has been set.
func (o *GetPlexSync200Response) HasRunning() bool {
	if o != nil && !isNil(o.Running) {
		return true
	}

	return false
}

// SetRunning gets a reference to the given bool and assigns it to the Running field.
func (o *GetPlexSync200Response) SetRunning(v bool) {
	o.Running = &v
}

// GetProgress returns the Progress field value if set, zero value otherwise.
func (o *GetPlexSync200Response) GetProgress() float32 {
	if o == nil || isNil(o.Progress) {
		var ret float32
		return ret
	}
	return *o.Progress
}

// GetProgressOk returns a tuple with the Progress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlexSync200Response) GetProgressOk() (*float32, bool) {
	if o == nil || isNil(o.Progress) {
    return nil, false
	}
	return o.Progress, true
}

// HasProgress returns a boolean if a field has been set.
func (o *GetPlexSync200Response) HasProgress() bool {
	if o != nil && !isNil(o.Progress) {
		return true
	}

	return false
}

// SetProgress gets a reference to the given float32 and assigns it to the Progress field.
func (o *GetPlexSync200Response) SetProgress(v float32) {
	o.Progress = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *GetPlexSync200Response) GetTotal() float32 {
	if o == nil || isNil(o.Total) {
		var ret float32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlexSync200Response) GetTotalOk() (*float32, bool) {
	if o == nil || isNil(o.Total) {
    return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *GetPlexSync200Response) HasTotal() bool {
	if o != nil && !isNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given float32 and assigns it to the Total field.
func (o *GetPlexSync200Response) SetTotal(v float32) {
	o.Total = &v
}

// GetCurrentLibrary returns the CurrentLibrary field value if set, zero value otherwise.
func (o *GetPlexSync200Response) GetCurrentLibrary() PlexLibrary {
	if o == nil || isNil(o.CurrentLibrary) {
		var ret PlexLibrary
		return ret
	}
	return *o.CurrentLibrary
}

// GetCurrentLibraryOk returns a tuple with the CurrentLibrary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlexSync200Response) GetCurrentLibraryOk() (*PlexLibrary, bool) {
	if o == nil || isNil(o.CurrentLibrary) {
    return nil, false
	}
	return o.CurrentLibrary, true
}

// HasCurrentLibrary returns a boolean if a field has been set.
func (o *GetPlexSync200Response) HasCurrentLibrary() bool {
	if o != nil && !isNil(o.CurrentLibrary) {
		return true
	}

	return false
}

// SetCurrentLibrary gets a reference to the given PlexLibrary and assigns it to the CurrentLibrary field.
func (o *GetPlexSync200Response) SetCurrentLibrary(v PlexLibrary) {
	o.CurrentLibrary = &v
}

// GetLibraries returns the Libraries field value if set, zero value otherwise.
func (o *GetPlexSync200Response) GetLibraries() []*PlexLibrary {
	if o == nil || isNil(o.Libraries) {
		var ret []*PlexLibrary
		return ret
	}
	return o.Libraries
}

// GetLibrariesOk returns a tuple with the Libraries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlexSync200Response) GetLibrariesOk() ([]*PlexLibrary, bool) {
	if o == nil || isNil(o.Libraries) {
    return nil, false
	}
	return o.Libraries, true
}

// HasLibraries returns a boolean if a field has been set.
func (o *GetPlexSync200Response) HasLibraries() bool {
	if o != nil && !isNil(o.Libraries) {
		return true
	}

	return false
}

// SetLibraries gets a reference to the given []PlexLibrary and assigns it to the Libraries field.
func (o *GetPlexSync200Response) SetLibraries(v []*PlexLibrary) {
	o.Libraries = v
}

func (o GetPlexSync200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Running) {
		toSerialize["running"] = o.Running
	}
	if !isNil(o.Progress) {
		toSerialize["progress"] = o.Progress
	}
	if !isNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !isNil(o.CurrentLibrary) {
		toSerialize["currentLibrary"] = o.CurrentLibrary
	}
	if !isNil(o.Libraries) {
		toSerialize["libraries"] = o.Libraries
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *GetPlexSync200Response) UnmarshalJSON(bytes []byte) (err error) {
	varGetPlexSync200Response := _GetPlexSync200Response{}

	if err = json.Unmarshal(bytes, &varGetPlexSync200Response); err == nil {
		*o = GetPlexSync200Response(varGetPlexSync200Response)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "running")
		delete(additionalProperties, "progress")
		delete(additionalProperties, "total")
		delete(additionalProperties, "currentLibrary")
		delete(additionalProperties, "libraries")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetPlexSync200Response struct {
	value *GetPlexSync200Response
	isSet bool
}

func (v NullableGetPlexSync200Response) Get() *GetPlexSync200Response {
	return v.value
}

func (v *NullableGetPlexSync200Response) Set(val *GetPlexSync200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPlexSync200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPlexSync200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPlexSync200Response(val *GetPlexSync200Response) *NullableGetPlexSync200Response {
	return &NullableGetPlexSync200Response{value: val, isSet: true}
}

func (v NullableGetPlexSync200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPlexSync200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


