/*
Overseerr API

This is the documentation for the Overseerr API backend.  Two primary authentication methods are supported:  - **Cookie Authentication**: A valid sign-in to the `/auth/plex` or `/auth/local` will generate a valid authentication cookie. - **API Key Authentication**: Sign-in is also possible by passing an `X-Api-Key` header along with a valid API Key generated by Overseerr. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package overseerr

import (
	"encoding/json"
)

// ListLogs200ResponseInner struct for ListLogs200ResponseInner
type ListLogs200ResponseInner struct {
	Label *string `json:"label,omitempty"`
	Level *string `json:"level,omitempty"`
	Message *string `json:"message,omitempty"`
	Timestamp *string `json:"timestamp,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListLogs200ResponseInner ListLogs200ResponseInner

// NewListLogs200ResponseInner instantiates a new ListLogs200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListLogs200ResponseInner() *ListLogs200ResponseInner {
	this := ListLogs200ResponseInner{}
	return &this
}

// NewListLogs200ResponseInnerWithDefaults instantiates a new ListLogs200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListLogs200ResponseInnerWithDefaults() *ListLogs200ResponseInner {
	this := ListLogs200ResponseInner{}
	return &this
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *ListLogs200ResponseInner) GetLabel() string {
	if o == nil || isNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListLogs200ResponseInner) GetLabelOk() (*string, bool) {
	if o == nil || isNil(o.Label) {
    return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *ListLogs200ResponseInner) HasLabel() bool {
	if o != nil && !isNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *ListLogs200ResponseInner) SetLabel(v string) {
	o.Label = &v
}

// GetLevel returns the Level field value if set, zero value otherwise.
func (o *ListLogs200ResponseInner) GetLevel() string {
	if o == nil || isNil(o.Level) {
		var ret string
		return ret
	}
	return *o.Level
}

// GetLevelOk returns a tuple with the Level field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListLogs200ResponseInner) GetLevelOk() (*string, bool) {
	if o == nil || isNil(o.Level) {
    return nil, false
	}
	return o.Level, true
}

// HasLevel returns a boolean if a field has been set.
func (o *ListLogs200ResponseInner) HasLevel() bool {
	if o != nil && !isNil(o.Level) {
		return true
	}

	return false
}

// SetLevel gets a reference to the given string and assigns it to the Level field.
func (o *ListLogs200ResponseInner) SetLevel(v string) {
	o.Level = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ListLogs200ResponseInner) GetMessage() string {
	if o == nil || isNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListLogs200ResponseInner) GetMessageOk() (*string, bool) {
	if o == nil || isNil(o.Message) {
    return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ListLogs200ResponseInner) HasMessage() bool {
	if o != nil && !isNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ListLogs200ResponseInner) SetMessage(v string) {
	o.Message = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *ListLogs200ResponseInner) GetTimestamp() string {
	if o == nil || isNil(o.Timestamp) {
		var ret string
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListLogs200ResponseInner) GetTimestampOk() (*string, bool) {
	if o == nil || isNil(o.Timestamp) {
    return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ListLogs200ResponseInner) HasTimestamp() bool {
	if o != nil && !isNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given string and assigns it to the Timestamp field.
func (o *ListLogs200ResponseInner) SetTimestamp(v string) {
	o.Timestamp = &v
}

func (o ListLogs200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !isNil(o.Level) {
		toSerialize["level"] = o.Level
	}
	if !isNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !isNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ListLogs200ResponseInner) UnmarshalJSON(bytes []byte) (err error) {
	varListLogs200ResponseInner := _ListLogs200ResponseInner{}

	if err = json.Unmarshal(bytes, &varListLogs200ResponseInner); err == nil {
		*o = ListLogs200ResponseInner(varListLogs200ResponseInner)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "label")
		delete(additionalProperties, "level")
		delete(additionalProperties, "message")
		delete(additionalProperties, "timestamp")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListLogs200ResponseInner struct {
	value *ListLogs200ResponseInner
	isSet bool
}

func (v NullableListLogs200ResponseInner) Get() *ListLogs200ResponseInner {
	return v.value
}

func (v *NullableListLogs200ResponseInner) Set(val *ListLogs200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListLogs200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListLogs200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListLogs200ResponseInner(val *ListLogs200ResponseInner) *NullableListLogs200ResponseInner {
	return &NullableListLogs200ResponseInner{value: val, isSet: true}
}

func (v NullableListLogs200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListLogs200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


