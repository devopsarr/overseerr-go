/*
Overseerr API

This is the documentation for the Overseerr API backend.  Two primary authentication methods are supported:  - **Cookie Authentication**: A valid sign-in to the `/auth/plex` or `/auth/local` will generate a valid authentication cookie. - **API Key Authentication**: Sign-in is also possible by passing an `X-Api-Key` header along with a valid API Key generated by Overseerr. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package overseerr

import (
	"encoding/json"
)

// GetUserQuota200Response struct for GetUserQuota200Response
type GetUserQuota200Response struct {
	Movie *GetUserQuota200ResponseMovie `json:"movie,omitempty"`
	Tv *GetUserQuota200ResponseMovie `json:"tv,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetUserQuota200Response GetUserQuota200Response

// NewGetUserQuota200Response instantiates a new GetUserQuota200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetUserQuota200Response() *GetUserQuota200Response {
	this := GetUserQuota200Response{}
	return &this
}

// NewGetUserQuota200ResponseWithDefaults instantiates a new GetUserQuota200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetUserQuota200ResponseWithDefaults() *GetUserQuota200Response {
	this := GetUserQuota200Response{}
	return &this
}

// GetMovie returns the Movie field value if set, zero value otherwise.
func (o *GetUserQuota200Response) GetMovie() GetUserQuota200ResponseMovie {
	if o == nil || isNil(o.Movie) {
		var ret GetUserQuota200ResponseMovie
		return ret
	}
	return *o.Movie
}

// GetMovieOk returns a tuple with the Movie field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserQuota200Response) GetMovieOk() (*GetUserQuota200ResponseMovie, bool) {
	if o == nil || isNil(o.Movie) {
    return nil, false
	}
	return o.Movie, true
}

// HasMovie returns a boolean if a field has been set.
func (o *GetUserQuota200Response) HasMovie() bool {
	if o != nil && !isNil(o.Movie) {
		return true
	}

	return false
}

// SetMovie gets a reference to the given GetUserQuota200ResponseMovie and assigns it to the Movie field.
func (o *GetUserQuota200Response) SetMovie(v GetUserQuota200ResponseMovie) {
	o.Movie = &v
}

// GetTv returns the Tv field value if set, zero value otherwise.
func (o *GetUserQuota200Response) GetTv() GetUserQuota200ResponseMovie {
	if o == nil || isNil(o.Tv) {
		var ret GetUserQuota200ResponseMovie
		return ret
	}
	return *o.Tv
}

// GetTvOk returns a tuple with the Tv field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserQuota200Response) GetTvOk() (*GetUserQuota200ResponseMovie, bool) {
	if o == nil || isNil(o.Tv) {
    return nil, false
	}
	return o.Tv, true
}

// HasTv returns a boolean if a field has been set.
func (o *GetUserQuota200Response) HasTv() bool {
	if o != nil && !isNil(o.Tv) {
		return true
	}

	return false
}

// SetTv gets a reference to the given GetUserQuota200ResponseMovie and assigns it to the Tv field.
func (o *GetUserQuota200Response) SetTv(v GetUserQuota200ResponseMovie) {
	o.Tv = &v
}

func (o GetUserQuota200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Movie) {
		toSerialize["movie"] = o.Movie
	}
	if !isNil(o.Tv) {
		toSerialize["tv"] = o.Tv
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *GetUserQuota200Response) UnmarshalJSON(bytes []byte) (err error) {
	varGetUserQuota200Response := _GetUserQuota200Response{}

	if err = json.Unmarshal(bytes, &varGetUserQuota200Response); err == nil {
		*o = GetUserQuota200Response(varGetUserQuota200Response)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "movie")
		delete(additionalProperties, "tv")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetUserQuota200Response struct {
	value *GetUserQuota200Response
	isSet bool
}

func (v NullableGetUserQuota200Response) Get() *GetUserQuota200Response {
	return v.value
}

func (v *NullableGetUserQuota200Response) Set(val *GetUserQuota200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetUserQuota200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetUserQuota200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetUserQuota200Response(val *GetUserQuota200Response) *NullableGetUserQuota200Response {
	return &NullableGetUserQuota200Response{value: val, isSet: true}
}

func (v NullableGetUserQuota200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetUserQuota200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


