/*
Overseerr API

This is the documentation for the Overseerr API backend.  Two primary authentication methods are supported:  - **Cookie Authentication**: A valid sign-in to the `/auth/plex` or `/auth/local` will generate a valid authentication cookie. - **API Key Authentication**: Sign-in is also possible by passing an `X-Api-Key` header along with a valid API Key generated by Overseerr. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package overseerr

import (
	"encoding/json"
)

// GetMovieRatingscombined200Response struct for GetMovieRatingscombined200Response
type GetMovieRatingscombined200Response struct {
	Rt *GetMovieRatings200Response `json:"rt,omitempty"`
	Imdb *GetMovieRatingscombined200ResponseImdb `json:"imdb,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetMovieRatingscombined200Response GetMovieRatingscombined200Response

// NewGetMovieRatingscombined200Response instantiates a new GetMovieRatingscombined200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetMovieRatingscombined200Response() *GetMovieRatingscombined200Response {
	this := GetMovieRatingscombined200Response{}
	return &this
}

// NewGetMovieRatingscombined200ResponseWithDefaults instantiates a new GetMovieRatingscombined200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetMovieRatingscombined200ResponseWithDefaults() *GetMovieRatingscombined200Response {
	this := GetMovieRatingscombined200Response{}
	return &this
}

// GetRt returns the Rt field value if set, zero value otherwise.
func (o *GetMovieRatingscombined200Response) GetRt() GetMovieRatings200Response {
	if o == nil || isNil(o.Rt) {
		var ret GetMovieRatings200Response
		return ret
	}
	return *o.Rt
}

// GetRtOk returns a tuple with the Rt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMovieRatingscombined200Response) GetRtOk() (*GetMovieRatings200Response, bool) {
	if o == nil || isNil(o.Rt) {
    return nil, false
	}
	return o.Rt, true
}

// HasRt returns a boolean if a field has been set.
func (o *GetMovieRatingscombined200Response) HasRt() bool {
	if o != nil && !isNil(o.Rt) {
		return true
	}

	return false
}

// SetRt gets a reference to the given GetMovieRatings200Response and assigns it to the Rt field.
func (o *GetMovieRatingscombined200Response) SetRt(v GetMovieRatings200Response) {
	o.Rt = &v
}

// GetImdb returns the Imdb field value if set, zero value otherwise.
func (o *GetMovieRatingscombined200Response) GetImdb() GetMovieRatingscombined200ResponseImdb {
	if o == nil || isNil(o.Imdb) {
		var ret GetMovieRatingscombined200ResponseImdb
		return ret
	}
	return *o.Imdb
}

// GetImdbOk returns a tuple with the Imdb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMovieRatingscombined200Response) GetImdbOk() (*GetMovieRatingscombined200ResponseImdb, bool) {
	if o == nil || isNil(o.Imdb) {
    return nil, false
	}
	return o.Imdb, true
}

// HasImdb returns a boolean if a field has been set.
func (o *GetMovieRatingscombined200Response) HasImdb() bool {
	if o != nil && !isNil(o.Imdb) {
		return true
	}

	return false
}

// SetImdb gets a reference to the given GetMovieRatingscombined200ResponseImdb and assigns it to the Imdb field.
func (o *GetMovieRatingscombined200Response) SetImdb(v GetMovieRatingscombined200ResponseImdb) {
	o.Imdb = &v
}

func (o GetMovieRatingscombined200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Rt) {
		toSerialize["rt"] = o.Rt
	}
	if !isNil(o.Imdb) {
		toSerialize["imdb"] = o.Imdb
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *GetMovieRatingscombined200Response) UnmarshalJSON(bytes []byte) (err error) {
	varGetMovieRatingscombined200Response := _GetMovieRatingscombined200Response{}

	if err = json.Unmarshal(bytes, &varGetMovieRatingscombined200Response); err == nil {
		*o = GetMovieRatingscombined200Response(varGetMovieRatingscombined200Response)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "rt")
		delete(additionalProperties, "imdb")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetMovieRatingscombined200Response struct {
	value *GetMovieRatingscombined200Response
	isSet bool
}

func (v NullableGetMovieRatingscombined200Response) Get() *GetMovieRatingscombined200Response {
	return v.value
}

func (v *NullableGetMovieRatingscombined200Response) Set(val *GetMovieRatingscombined200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMovieRatingscombined200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMovieRatingscombined200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMovieRatingscombined200Response(val *GetMovieRatingscombined200Response) *NullableGetMovieRatingscombined200Response {
	return &NullableGetMovieRatingscombined200Response{value: val, isSet: true}
}

func (v NullableGetMovieRatingscombined200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMovieRatingscombined200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


