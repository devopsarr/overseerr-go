/*
Overseerr API

This is the documentation for the Overseerr API backend.  Two primary authentication methods are supported:  - **Cookie Authentication**: A valid sign-in to the `/auth/plex` or `/auth/local` will generate a valid authentication cookie. - **API Key Authentication**: Sign-in is also possible by passing an `X-Api-Key` header along with a valid API Key generated by Overseerr. 

API version: v1.34.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package overseerr

import (
	"encoding/json"
)

// checks if the ExternalIds type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalIds{}

// ExternalIds struct for ExternalIds
type ExternalIds struct {
	FacebookId NullableString `json:"facebookId,omitempty"`
	FreebaseId NullableString `json:"freebaseId,omitempty"`
	FreebaseMid NullableString `json:"freebaseMid,omitempty"`
	ImdbId NullableString `json:"imdbId,omitempty"`
	InstagramId NullableString `json:"instagramId,omitempty"`
	TvdbId NullableFloat32 `json:"tvdbId,omitempty"`
	TvrageId NullableFloat32 `json:"tvrageId,omitempty"`
	TwitterId NullableString `json:"twitterId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ExternalIds ExternalIds

// NewExternalIds instantiates a new ExternalIds object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalIds() *ExternalIds {
	this := ExternalIds{}
	return &this
}

// NewExternalIdsWithDefaults instantiates a new ExternalIds object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalIdsWithDefaults() *ExternalIds {
	this := ExternalIds{}
	return &this
}

// GetFacebookId returns the FacebookId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalIds) GetFacebookId() string {
	if o == nil || IsNil(o.FacebookId.Get()) {
		var ret string
		return ret
	}
	return *o.FacebookId.Get()
}

// GetFacebookIdOk returns a tuple with the FacebookId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalIds) GetFacebookIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FacebookId.Get(), o.FacebookId.IsSet()
}

// HasFacebookId returns a boolean if a field has been set.
func (o *ExternalIds) HasFacebookId() bool {
	if o != nil && o.FacebookId.IsSet() {
		return true
	}

	return false
}

// SetFacebookId gets a reference to the given NullableString and assigns it to the FacebookId field.
func (o *ExternalIds) SetFacebookId(v string) {
	o.FacebookId.Set(&v)
}
// SetFacebookIdNil sets the value for FacebookId to be an explicit nil
func (o *ExternalIds) SetFacebookIdNil() {
	o.FacebookId.Set(nil)
}

// UnsetFacebookId ensures that no value is present for FacebookId, not even an explicit nil
func (o *ExternalIds) UnsetFacebookId() {
	o.FacebookId.Unset()
}

// GetFreebaseId returns the FreebaseId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalIds) GetFreebaseId() string {
	if o == nil || IsNil(o.FreebaseId.Get()) {
		var ret string
		return ret
	}
	return *o.FreebaseId.Get()
}

// GetFreebaseIdOk returns a tuple with the FreebaseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalIds) GetFreebaseIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FreebaseId.Get(), o.FreebaseId.IsSet()
}

// HasFreebaseId returns a boolean if a field has been set.
func (o *ExternalIds) HasFreebaseId() bool {
	if o != nil && o.FreebaseId.IsSet() {
		return true
	}

	return false
}

// SetFreebaseId gets a reference to the given NullableString and assigns it to the FreebaseId field.
func (o *ExternalIds) SetFreebaseId(v string) {
	o.FreebaseId.Set(&v)
}
// SetFreebaseIdNil sets the value for FreebaseId to be an explicit nil
func (o *ExternalIds) SetFreebaseIdNil() {
	o.FreebaseId.Set(nil)
}

// UnsetFreebaseId ensures that no value is present for FreebaseId, not even an explicit nil
func (o *ExternalIds) UnsetFreebaseId() {
	o.FreebaseId.Unset()
}

// GetFreebaseMid returns the FreebaseMid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalIds) GetFreebaseMid() string {
	if o == nil || IsNil(o.FreebaseMid.Get()) {
		var ret string
		return ret
	}
	return *o.FreebaseMid.Get()
}

// GetFreebaseMidOk returns a tuple with the FreebaseMid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalIds) GetFreebaseMidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FreebaseMid.Get(), o.FreebaseMid.IsSet()
}

// HasFreebaseMid returns a boolean if a field has been set.
func (o *ExternalIds) HasFreebaseMid() bool {
	if o != nil && o.FreebaseMid.IsSet() {
		return true
	}

	return false
}

// SetFreebaseMid gets a reference to the given NullableString and assigns it to the FreebaseMid field.
func (o *ExternalIds) SetFreebaseMid(v string) {
	o.FreebaseMid.Set(&v)
}
// SetFreebaseMidNil sets the value for FreebaseMid to be an explicit nil
func (o *ExternalIds) SetFreebaseMidNil() {
	o.FreebaseMid.Set(nil)
}

// UnsetFreebaseMid ensures that no value is present for FreebaseMid, not even an explicit nil
func (o *ExternalIds) UnsetFreebaseMid() {
	o.FreebaseMid.Unset()
}

// GetImdbId returns the ImdbId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalIds) GetImdbId() string {
	if o == nil || IsNil(o.ImdbId.Get()) {
		var ret string
		return ret
	}
	return *o.ImdbId.Get()
}

// GetImdbIdOk returns a tuple with the ImdbId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalIds) GetImdbIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImdbId.Get(), o.ImdbId.IsSet()
}

// HasImdbId returns a boolean if a field has been set.
func (o *ExternalIds) HasImdbId() bool {
	if o != nil && o.ImdbId.IsSet() {
		return true
	}

	return false
}

// SetImdbId gets a reference to the given NullableString and assigns it to the ImdbId field.
func (o *ExternalIds) SetImdbId(v string) {
	o.ImdbId.Set(&v)
}
// SetImdbIdNil sets the value for ImdbId to be an explicit nil
func (o *ExternalIds) SetImdbIdNil() {
	o.ImdbId.Set(nil)
}

// UnsetImdbId ensures that no value is present for ImdbId, not even an explicit nil
func (o *ExternalIds) UnsetImdbId() {
	o.ImdbId.Unset()
}

// GetInstagramId returns the InstagramId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalIds) GetInstagramId() string {
	if o == nil || IsNil(o.InstagramId.Get()) {
		var ret string
		return ret
	}
	return *o.InstagramId.Get()
}

// GetInstagramIdOk returns a tuple with the InstagramId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalIds) GetInstagramIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InstagramId.Get(), o.InstagramId.IsSet()
}

// HasInstagramId returns a boolean if a field has been set.
func (o *ExternalIds) HasInstagramId() bool {
	if o != nil && o.InstagramId.IsSet() {
		return true
	}

	return false
}

// SetInstagramId gets a reference to the given NullableString and assigns it to the InstagramId field.
func (o *ExternalIds) SetInstagramId(v string) {
	o.InstagramId.Set(&v)
}
// SetInstagramIdNil sets the value for InstagramId to be an explicit nil
func (o *ExternalIds) SetInstagramIdNil() {
	o.InstagramId.Set(nil)
}

// UnsetInstagramId ensures that no value is present for InstagramId, not even an explicit nil
func (o *ExternalIds) UnsetInstagramId() {
	o.InstagramId.Unset()
}

// GetTvdbId returns the TvdbId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalIds) GetTvdbId() float32 {
	if o == nil || IsNil(o.TvdbId.Get()) {
		var ret float32
		return ret
	}
	return *o.TvdbId.Get()
}

// GetTvdbIdOk returns a tuple with the TvdbId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalIds) GetTvdbIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TvdbId.Get(), o.TvdbId.IsSet()
}

// HasTvdbId returns a boolean if a field has been set.
func (o *ExternalIds) HasTvdbId() bool {
	if o != nil && o.TvdbId.IsSet() {
		return true
	}

	return false
}

// SetTvdbId gets a reference to the given NullableFloat32 and assigns it to the TvdbId field.
func (o *ExternalIds) SetTvdbId(v float32) {
	o.TvdbId.Set(&v)
}
// SetTvdbIdNil sets the value for TvdbId to be an explicit nil
func (o *ExternalIds) SetTvdbIdNil() {
	o.TvdbId.Set(nil)
}

// UnsetTvdbId ensures that no value is present for TvdbId, not even an explicit nil
func (o *ExternalIds) UnsetTvdbId() {
	o.TvdbId.Unset()
}

// GetTvrageId returns the TvrageId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalIds) GetTvrageId() float32 {
	if o == nil || IsNil(o.TvrageId.Get()) {
		var ret float32
		return ret
	}
	return *o.TvrageId.Get()
}

// GetTvrageIdOk returns a tuple with the TvrageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalIds) GetTvrageIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TvrageId.Get(), o.TvrageId.IsSet()
}

// HasTvrageId returns a boolean if a field has been set.
func (o *ExternalIds) HasTvrageId() bool {
	if o != nil && o.TvrageId.IsSet() {
		return true
	}

	return false
}

// SetTvrageId gets a reference to the given NullableFloat32 and assigns it to the TvrageId field.
func (o *ExternalIds) SetTvrageId(v float32) {
	o.TvrageId.Set(&v)
}
// SetTvrageIdNil sets the value for TvrageId to be an explicit nil
func (o *ExternalIds) SetTvrageIdNil() {
	o.TvrageId.Set(nil)
}

// UnsetTvrageId ensures that no value is present for TvrageId, not even an explicit nil
func (o *ExternalIds) UnsetTvrageId() {
	o.TvrageId.Unset()
}

// GetTwitterId returns the TwitterId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalIds) GetTwitterId() string {
	if o == nil || IsNil(o.TwitterId.Get()) {
		var ret string
		return ret
	}
	return *o.TwitterId.Get()
}

// GetTwitterIdOk returns a tuple with the TwitterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalIds) GetTwitterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TwitterId.Get(), o.TwitterId.IsSet()
}

// HasTwitterId returns a boolean if a field has been set.
func (o *ExternalIds) HasTwitterId() bool {
	if o != nil && o.TwitterId.IsSet() {
		return true
	}

	return false
}

// SetTwitterId gets a reference to the given NullableString and assigns it to the TwitterId field.
func (o *ExternalIds) SetTwitterId(v string) {
	o.TwitterId.Set(&v)
}
// SetTwitterIdNil sets the value for TwitterId to be an explicit nil
func (o *ExternalIds) SetTwitterIdNil() {
	o.TwitterId.Set(nil)
}

// UnsetTwitterId ensures that no value is present for TwitterId, not even an explicit nil
func (o *ExternalIds) UnsetTwitterId() {
	o.TwitterId.Unset()
}

func (o ExternalIds) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalIds) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.FacebookId.IsSet() {
		toSerialize["facebookId"] = o.FacebookId.Get()
	}
	if o.FreebaseId.IsSet() {
		toSerialize["freebaseId"] = o.FreebaseId.Get()
	}
	if o.FreebaseMid.IsSet() {
		toSerialize["freebaseMid"] = o.FreebaseMid.Get()
	}
	if o.ImdbId.IsSet() {
		toSerialize["imdbId"] = o.ImdbId.Get()
	}
	if o.InstagramId.IsSet() {
		toSerialize["instagramId"] = o.InstagramId.Get()
	}
	if o.TvdbId.IsSet() {
		toSerialize["tvdbId"] = o.TvdbId.Get()
	}
	if o.TvrageId.IsSet() {
		toSerialize["tvrageId"] = o.TvrageId.Get()
	}
	if o.TwitterId.IsSet() {
		toSerialize["twitterId"] = o.TwitterId.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ExternalIds) UnmarshalJSON(data []byte) (err error) {
	varExternalIds := _ExternalIds{}

	err = json.Unmarshal(data, &varExternalIds)

	if err != nil {
		return err
	}

	*o = ExternalIds(varExternalIds)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "facebookId")
		delete(additionalProperties, "freebaseId")
		delete(additionalProperties, "freebaseMid")
		delete(additionalProperties, "imdbId")
		delete(additionalProperties, "instagramId")
		delete(additionalProperties, "tvdbId")
		delete(additionalProperties, "tvrageId")
		delete(additionalProperties, "twitterId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableExternalIds struct {
	value *ExternalIds
	isSet bool
}

func (v NullableExternalIds) Get() *ExternalIds {
	return v.value
}

func (v *NullableExternalIds) Set(val *ExternalIds) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalIds) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalIds) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalIds(val *ExternalIds) *NullableExternalIds {
	return &NullableExternalIds{value: val, isSet: true}
}

func (v NullableExternalIds) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalIds) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


