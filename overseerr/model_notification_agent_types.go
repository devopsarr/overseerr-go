/*
Overseerr API

This is the documentation for the Overseerr API backend.  Two primary authentication methods are supported:  - **Cookie Authentication**: A valid sign-in to the `/auth/plex` or `/auth/local` will generate a valid authentication cookie. - **API Key Authentication**: Sign-in is also possible by passing an `X-Api-Key` header along with a valid API Key generated by Overseerr. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package overseerr

import (
	"encoding/json"
)

// NotificationAgentTypes struct for NotificationAgentTypes
type NotificationAgentTypes struct {
	Discord *float32 `json:"discord,omitempty"`
	Email *float32 `json:"email,omitempty"`
	Pushbullet *float32 `json:"pushbullet,omitempty"`
	Pushover *float32 `json:"pushover,omitempty"`
	Slack *float32 `json:"slack,omitempty"`
	Telegram *float32 `json:"telegram,omitempty"`
	Webhook *float32 `json:"webhook,omitempty"`
	Webpush *float32 `json:"webpush,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _NotificationAgentTypes NotificationAgentTypes

// NewNotificationAgentTypes instantiates a new NotificationAgentTypes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotificationAgentTypes() *NotificationAgentTypes {
	this := NotificationAgentTypes{}
	return &this
}

// NewNotificationAgentTypesWithDefaults instantiates a new NotificationAgentTypes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotificationAgentTypesWithDefaults() *NotificationAgentTypes {
	this := NotificationAgentTypes{}
	return &this
}

// GetDiscord returns the Discord field value if set, zero value otherwise.
func (o *NotificationAgentTypes) GetDiscord() float32 {
	if o == nil || isNil(o.Discord) {
		var ret float32
		return ret
	}
	return *o.Discord
}

// GetDiscordOk returns a tuple with the Discord field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationAgentTypes) GetDiscordOk() (*float32, bool) {
	if o == nil || isNil(o.Discord) {
    return nil, false
	}
	return o.Discord, true
}

// HasDiscord returns a boolean if a field has been set.
func (o *NotificationAgentTypes) HasDiscord() bool {
	if o != nil && !isNil(o.Discord) {
		return true
	}

	return false
}

// SetDiscord gets a reference to the given float32 and assigns it to the Discord field.
func (o *NotificationAgentTypes) SetDiscord(v float32) {
	o.Discord = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *NotificationAgentTypes) GetEmail() float32 {
	if o == nil || isNil(o.Email) {
		var ret float32
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationAgentTypes) GetEmailOk() (*float32, bool) {
	if o == nil || isNil(o.Email) {
    return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *NotificationAgentTypes) HasEmail() bool {
	if o != nil && !isNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given float32 and assigns it to the Email field.
func (o *NotificationAgentTypes) SetEmail(v float32) {
	o.Email = &v
}

// GetPushbullet returns the Pushbullet field value if set, zero value otherwise.
func (o *NotificationAgentTypes) GetPushbullet() float32 {
	if o == nil || isNil(o.Pushbullet) {
		var ret float32
		return ret
	}
	return *o.Pushbullet
}

// GetPushbulletOk returns a tuple with the Pushbullet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationAgentTypes) GetPushbulletOk() (*float32, bool) {
	if o == nil || isNil(o.Pushbullet) {
    return nil, false
	}
	return o.Pushbullet, true
}

// HasPushbullet returns a boolean if a field has been set.
func (o *NotificationAgentTypes) HasPushbullet() bool {
	if o != nil && !isNil(o.Pushbullet) {
		return true
	}

	return false
}

// SetPushbullet gets a reference to the given float32 and assigns it to the Pushbullet field.
func (o *NotificationAgentTypes) SetPushbullet(v float32) {
	o.Pushbullet = &v
}

// GetPushover returns the Pushover field value if set, zero value otherwise.
func (o *NotificationAgentTypes) GetPushover() float32 {
	if o == nil || isNil(o.Pushover) {
		var ret float32
		return ret
	}
	return *o.Pushover
}

// GetPushoverOk returns a tuple with the Pushover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationAgentTypes) GetPushoverOk() (*float32, bool) {
	if o == nil || isNil(o.Pushover) {
    return nil, false
	}
	return o.Pushover, true
}

// HasPushover returns a boolean if a field has been set.
func (o *NotificationAgentTypes) HasPushover() bool {
	if o != nil && !isNil(o.Pushover) {
		return true
	}

	return false
}

// SetPushover gets a reference to the given float32 and assigns it to the Pushover field.
func (o *NotificationAgentTypes) SetPushover(v float32) {
	o.Pushover = &v
}

// GetSlack returns the Slack field value if set, zero value otherwise.
func (o *NotificationAgentTypes) GetSlack() float32 {
	if o == nil || isNil(o.Slack) {
		var ret float32
		return ret
	}
	return *o.Slack
}

// GetSlackOk returns a tuple with the Slack field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationAgentTypes) GetSlackOk() (*float32, bool) {
	if o == nil || isNil(o.Slack) {
    return nil, false
	}
	return o.Slack, true
}

// HasSlack returns a boolean if a field has been set.
func (o *NotificationAgentTypes) HasSlack() bool {
	if o != nil && !isNil(o.Slack) {
		return true
	}

	return false
}

// SetSlack gets a reference to the given float32 and assigns it to the Slack field.
func (o *NotificationAgentTypes) SetSlack(v float32) {
	o.Slack = &v
}

// GetTelegram returns the Telegram field value if set, zero value otherwise.
func (o *NotificationAgentTypes) GetTelegram() float32 {
	if o == nil || isNil(o.Telegram) {
		var ret float32
		return ret
	}
	return *o.Telegram
}

// GetTelegramOk returns a tuple with the Telegram field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationAgentTypes) GetTelegramOk() (*float32, bool) {
	if o == nil || isNil(o.Telegram) {
    return nil, false
	}
	return o.Telegram, true
}

// HasTelegram returns a boolean if a field has been set.
func (o *NotificationAgentTypes) HasTelegram() bool {
	if o != nil && !isNil(o.Telegram) {
		return true
	}

	return false
}

// SetTelegram gets a reference to the given float32 and assigns it to the Telegram field.
func (o *NotificationAgentTypes) SetTelegram(v float32) {
	o.Telegram = &v
}

// GetWebhook returns the Webhook field value if set, zero value otherwise.
func (o *NotificationAgentTypes) GetWebhook() float32 {
	if o == nil || isNil(o.Webhook) {
		var ret float32
		return ret
	}
	return *o.Webhook
}

// GetWebhookOk returns a tuple with the Webhook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationAgentTypes) GetWebhookOk() (*float32, bool) {
	if o == nil || isNil(o.Webhook) {
    return nil, false
	}
	return o.Webhook, true
}

// HasWebhook returns a boolean if a field has been set.
func (o *NotificationAgentTypes) HasWebhook() bool {
	if o != nil && !isNil(o.Webhook) {
		return true
	}

	return false
}

// SetWebhook gets a reference to the given float32 and assigns it to the Webhook field.
func (o *NotificationAgentTypes) SetWebhook(v float32) {
	o.Webhook = &v
}

// GetWebpush returns the Webpush field value if set, zero value otherwise.
func (o *NotificationAgentTypes) GetWebpush() float32 {
	if o == nil || isNil(o.Webpush) {
		var ret float32
		return ret
	}
	return *o.Webpush
}

// GetWebpushOk returns a tuple with the Webpush field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationAgentTypes) GetWebpushOk() (*float32, bool) {
	if o == nil || isNil(o.Webpush) {
    return nil, false
	}
	return o.Webpush, true
}

// HasWebpush returns a boolean if a field has been set.
func (o *NotificationAgentTypes) HasWebpush() bool {
	if o != nil && !isNil(o.Webpush) {
		return true
	}

	return false
}

// SetWebpush gets a reference to the given float32 and assigns it to the Webpush field.
func (o *NotificationAgentTypes) SetWebpush(v float32) {
	o.Webpush = &v
}

func (o NotificationAgentTypes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Discord) {
		toSerialize["discord"] = o.Discord
	}
	if !isNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !isNil(o.Pushbullet) {
		toSerialize["pushbullet"] = o.Pushbullet
	}
	if !isNil(o.Pushover) {
		toSerialize["pushover"] = o.Pushover
	}
	if !isNil(o.Slack) {
		toSerialize["slack"] = o.Slack
	}
	if !isNil(o.Telegram) {
		toSerialize["telegram"] = o.Telegram
	}
	if !isNil(o.Webhook) {
		toSerialize["webhook"] = o.Webhook
	}
	if !isNil(o.Webpush) {
		toSerialize["webpush"] = o.Webpush
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *NotificationAgentTypes) UnmarshalJSON(bytes []byte) (err error) {
	varNotificationAgentTypes := _NotificationAgentTypes{}

	if err = json.Unmarshal(bytes, &varNotificationAgentTypes); err == nil {
		*o = NotificationAgentTypes(varNotificationAgentTypes)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "discord")
		delete(additionalProperties, "email")
		delete(additionalProperties, "pushbullet")
		delete(additionalProperties, "pushover")
		delete(additionalProperties, "slack")
		delete(additionalProperties, "telegram")
		delete(additionalProperties, "webhook")
		delete(additionalProperties, "webpush")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableNotificationAgentTypes struct {
	value *NotificationAgentTypes
	isSet bool
}

func (v NullableNotificationAgentTypes) Get() *NotificationAgentTypes {
	return v.value
}

func (v *NullableNotificationAgentTypes) Set(val *NotificationAgentTypes) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationAgentTypes) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationAgentTypes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationAgentTypes(val *NotificationAgentTypes) *NullableNotificationAgentTypes {
	return &NullableNotificationAgentTypes{value: val, isSet: true}
}

func (v NullableNotificationAgentTypes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationAgentTypes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


