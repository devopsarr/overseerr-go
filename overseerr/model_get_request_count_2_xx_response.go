/*
Overseerr API

This is the documentation for the Overseerr API backend.  Two primary authentication methods are supported:  - **Cookie Authentication**: A valid sign-in to the `/auth/plex` or `/auth/local` will generate a valid authentication cookie. - **API Key Authentication**: Sign-in is also possible by passing an `X-Api-Key` header along with a valid API Key generated by Overseerr. 

API version: v1.33.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package overseerr

import (
	"encoding/json"
)

// GetRequestCount2XXResponse struct for GetRequestCount2XXResponse
type GetRequestCount2XXResponse struct {
	Total *float32 `json:"total,omitempty"`
	Movie *float32 `json:"movie,omitempty"`
	Tv *float32 `json:"tv,omitempty"`
	Pending *float32 `json:"pending,omitempty"`
	Approved *float32 `json:"approved,omitempty"`
	Declined *float32 `json:"declined,omitempty"`
	Processing *float32 `json:"processing,omitempty"`
	Available *float32 `json:"available,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetRequestCount2XXResponse GetRequestCount2XXResponse

// NewGetRequestCount2XXResponse instantiates a new GetRequestCount2XXResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRequestCount2XXResponse() *GetRequestCount2XXResponse {
	this := GetRequestCount2XXResponse{}
	return &this
}

// NewGetRequestCount2XXResponseWithDefaults instantiates a new GetRequestCount2XXResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRequestCount2XXResponseWithDefaults() *GetRequestCount2XXResponse {
	this := GetRequestCount2XXResponse{}
	return &this
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *GetRequestCount2XXResponse) GetTotal() float32 {
	if o == nil || isNil(o.Total) {
		var ret float32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRequestCount2XXResponse) GetTotalOk() (*float32, bool) {
	if o == nil || isNil(o.Total) {
    return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *GetRequestCount2XXResponse) HasTotal() bool {
	if o != nil && !isNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given float32 and assigns it to the Total field.
func (o *GetRequestCount2XXResponse) SetTotal(v float32) {
	o.Total = &v
}

// GetMovie returns the Movie field value if set, zero value otherwise.
func (o *GetRequestCount2XXResponse) GetMovie() float32 {
	if o == nil || isNil(o.Movie) {
		var ret float32
		return ret
	}
	return *o.Movie
}

// GetMovieOk returns a tuple with the Movie field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRequestCount2XXResponse) GetMovieOk() (*float32, bool) {
	if o == nil || isNil(o.Movie) {
    return nil, false
	}
	return o.Movie, true
}

// HasMovie returns a boolean if a field has been set.
func (o *GetRequestCount2XXResponse) HasMovie() bool {
	if o != nil && !isNil(o.Movie) {
		return true
	}

	return false
}

// SetMovie gets a reference to the given float32 and assigns it to the Movie field.
func (o *GetRequestCount2XXResponse) SetMovie(v float32) {
	o.Movie = &v
}

// GetTv returns the Tv field value if set, zero value otherwise.
func (o *GetRequestCount2XXResponse) GetTv() float32 {
	if o == nil || isNil(o.Tv) {
		var ret float32
		return ret
	}
	return *o.Tv
}

// GetTvOk returns a tuple with the Tv field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRequestCount2XXResponse) GetTvOk() (*float32, bool) {
	if o == nil || isNil(o.Tv) {
    return nil, false
	}
	return o.Tv, true
}

// HasTv returns a boolean if a field has been set.
func (o *GetRequestCount2XXResponse) HasTv() bool {
	if o != nil && !isNil(o.Tv) {
		return true
	}

	return false
}

// SetTv gets a reference to the given float32 and assigns it to the Tv field.
func (o *GetRequestCount2XXResponse) SetTv(v float32) {
	o.Tv = &v
}

// GetPending returns the Pending field value if set, zero value otherwise.
func (o *GetRequestCount2XXResponse) GetPending() float32 {
	if o == nil || isNil(o.Pending) {
		var ret float32
		return ret
	}
	return *o.Pending
}

// GetPendingOk returns a tuple with the Pending field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRequestCount2XXResponse) GetPendingOk() (*float32, bool) {
	if o == nil || isNil(o.Pending) {
    return nil, false
	}
	return o.Pending, true
}

// HasPending returns a boolean if a field has been set.
func (o *GetRequestCount2XXResponse) HasPending() bool {
	if o != nil && !isNil(o.Pending) {
		return true
	}

	return false
}

// SetPending gets a reference to the given float32 and assigns it to the Pending field.
func (o *GetRequestCount2XXResponse) SetPending(v float32) {
	o.Pending = &v
}

// GetApproved returns the Approved field value if set, zero value otherwise.
func (o *GetRequestCount2XXResponse) GetApproved() float32 {
	if o == nil || isNil(o.Approved) {
		var ret float32
		return ret
	}
	return *o.Approved
}

// GetApprovedOk returns a tuple with the Approved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRequestCount2XXResponse) GetApprovedOk() (*float32, bool) {
	if o == nil || isNil(o.Approved) {
    return nil, false
	}
	return o.Approved, true
}

// HasApproved returns a boolean if a field has been set.
func (o *GetRequestCount2XXResponse) HasApproved() bool {
	if o != nil && !isNil(o.Approved) {
		return true
	}

	return false
}

// SetApproved gets a reference to the given float32 and assigns it to the Approved field.
func (o *GetRequestCount2XXResponse) SetApproved(v float32) {
	o.Approved = &v
}

// GetDeclined returns the Declined field value if set, zero value otherwise.
func (o *GetRequestCount2XXResponse) GetDeclined() float32 {
	if o == nil || isNil(o.Declined) {
		var ret float32
		return ret
	}
	return *o.Declined
}

// GetDeclinedOk returns a tuple with the Declined field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRequestCount2XXResponse) GetDeclinedOk() (*float32, bool) {
	if o == nil || isNil(o.Declined) {
    return nil, false
	}
	return o.Declined, true
}

// HasDeclined returns a boolean if a field has been set.
func (o *GetRequestCount2XXResponse) HasDeclined() bool {
	if o != nil && !isNil(o.Declined) {
		return true
	}

	return false
}

// SetDeclined gets a reference to the given float32 and assigns it to the Declined field.
func (o *GetRequestCount2XXResponse) SetDeclined(v float32) {
	o.Declined = &v
}

// GetProcessing returns the Processing field value if set, zero value otherwise.
func (o *GetRequestCount2XXResponse) GetProcessing() float32 {
	if o == nil || isNil(o.Processing) {
		var ret float32
		return ret
	}
	return *o.Processing
}

// GetProcessingOk returns a tuple with the Processing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRequestCount2XXResponse) GetProcessingOk() (*float32, bool) {
	if o == nil || isNil(o.Processing) {
    return nil, false
	}
	return o.Processing, true
}

// HasProcessing returns a boolean if a field has been set.
func (o *GetRequestCount2XXResponse) HasProcessing() bool {
	if o != nil && !isNil(o.Processing) {
		return true
	}

	return false
}

// SetProcessing gets a reference to the given float32 and assigns it to the Processing field.
func (o *GetRequestCount2XXResponse) SetProcessing(v float32) {
	o.Processing = &v
}

// GetAvailable returns the Available field value if set, zero value otherwise.
func (o *GetRequestCount2XXResponse) GetAvailable() float32 {
	if o == nil || isNil(o.Available) {
		var ret float32
		return ret
	}
	return *o.Available
}

// GetAvailableOk returns a tuple with the Available field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRequestCount2XXResponse) GetAvailableOk() (*float32, bool) {
	if o == nil || isNil(o.Available) {
    return nil, false
	}
	return o.Available, true
}

// HasAvailable returns a boolean if a field has been set.
func (o *GetRequestCount2XXResponse) HasAvailable() bool {
	if o != nil && !isNil(o.Available) {
		return true
	}

	return false
}

// SetAvailable gets a reference to the given float32 and assigns it to the Available field.
func (o *GetRequestCount2XXResponse) SetAvailable(v float32) {
	o.Available = &v
}

func (o GetRequestCount2XXResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !isNil(o.Movie) {
		toSerialize["movie"] = o.Movie
	}
	if !isNil(o.Tv) {
		toSerialize["tv"] = o.Tv
	}
	if !isNil(o.Pending) {
		toSerialize["pending"] = o.Pending
	}
	if !isNil(o.Approved) {
		toSerialize["approved"] = o.Approved
	}
	if !isNil(o.Declined) {
		toSerialize["declined"] = o.Declined
	}
	if !isNil(o.Processing) {
		toSerialize["processing"] = o.Processing
	}
	if !isNil(o.Available) {
		toSerialize["available"] = o.Available
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *GetRequestCount2XXResponse) UnmarshalJSON(bytes []byte) (err error) {
	varGetRequestCount2XXResponse := _GetRequestCount2XXResponse{}

	if err = json.Unmarshal(bytes, &varGetRequestCount2XXResponse); err == nil {
		*o = GetRequestCount2XXResponse(varGetRequestCount2XXResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "total")
		delete(additionalProperties, "movie")
		delete(additionalProperties, "tv")
		delete(additionalProperties, "pending")
		delete(additionalProperties, "approved")
		delete(additionalProperties, "declined")
		delete(additionalProperties, "processing")
		delete(additionalProperties, "available")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetRequestCount2XXResponse struct {
	value *GetRequestCount2XXResponse
	isSet bool
}

func (v NullableGetRequestCount2XXResponse) Get() *GetRequestCount2XXResponse {
	return v.value
}

func (v *NullableGetRequestCount2XXResponse) Set(val *GetRequestCount2XXResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRequestCount2XXResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRequestCount2XXResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRequestCount2XXResponse(val *GetRequestCount2XXResponse) *NullableGetRequestCount2XXResponse {
	return &NullableGetRequestCount2XXResponse{value: val, isSet: true}
}

func (v NullableGetRequestCount2XXResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRequestCount2XXResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


