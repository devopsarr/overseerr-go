/*
Overseerr API

This is the documentation for the Overseerr API backend.  Two primary authentication methods are supported:  - **Cookie Authentication**: A valid sign-in to the `/auth/plex` or `/auth/local` will generate a valid authentication cookie. - **API Key Authentication**: Sign-in is also possible by passing an `X-Api-Key` header along with a valid API Key generated by Overseerr. 

API version: v1.33.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package overseerr

import (
	"encoding/json"
)

// GetServiceSonarrBySonarrId2XXResponse struct for GetServiceSonarrBySonarrId2XXResponse
type GetServiceSonarrBySonarrId2XXResponse struct {
	Server *SonarrSettings `json:"server,omitempty"`
	Profiles *ServiceProfile `json:"profiles,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetServiceSonarrBySonarrId2XXResponse GetServiceSonarrBySonarrId2XXResponse

// NewGetServiceSonarrBySonarrId2XXResponse instantiates a new GetServiceSonarrBySonarrId2XXResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetServiceSonarrBySonarrId2XXResponse() *GetServiceSonarrBySonarrId2XXResponse {
	this := GetServiceSonarrBySonarrId2XXResponse{}
	return &this
}

// NewGetServiceSonarrBySonarrId2XXResponseWithDefaults instantiates a new GetServiceSonarrBySonarrId2XXResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetServiceSonarrBySonarrId2XXResponseWithDefaults() *GetServiceSonarrBySonarrId2XXResponse {
	this := GetServiceSonarrBySonarrId2XXResponse{}
	return &this
}

// GetServer returns the Server field value if set, zero value otherwise.
func (o *GetServiceSonarrBySonarrId2XXResponse) GetServer() SonarrSettings {
	if o == nil || isNil(o.Server) {
		var ret SonarrSettings
		return ret
	}
	return *o.Server
}

// GetServerOk returns a tuple with the Server field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServiceSonarrBySonarrId2XXResponse) GetServerOk() (*SonarrSettings, bool) {
	if o == nil || isNil(o.Server) {
    return nil, false
	}
	return o.Server, true
}

// HasServer returns a boolean if a field has been set.
func (o *GetServiceSonarrBySonarrId2XXResponse) HasServer() bool {
	if o != nil && !isNil(o.Server) {
		return true
	}

	return false
}

// SetServer gets a reference to the given SonarrSettings and assigns it to the Server field.
func (o *GetServiceSonarrBySonarrId2XXResponse) SetServer(v SonarrSettings) {
	o.Server = &v
}

// GetProfiles returns the Profiles field value if set, zero value otherwise.
func (o *GetServiceSonarrBySonarrId2XXResponse) GetProfiles() ServiceProfile {
	if o == nil || isNil(o.Profiles) {
		var ret ServiceProfile
		return ret
	}
	return *o.Profiles
}

// GetProfilesOk returns a tuple with the Profiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServiceSonarrBySonarrId2XXResponse) GetProfilesOk() (*ServiceProfile, bool) {
	if o == nil || isNil(o.Profiles) {
    return nil, false
	}
	return o.Profiles, true
}

// HasProfiles returns a boolean if a field has been set.
func (o *GetServiceSonarrBySonarrId2XXResponse) HasProfiles() bool {
	if o != nil && !isNil(o.Profiles) {
		return true
	}

	return false
}

// SetProfiles gets a reference to the given ServiceProfile and assigns it to the Profiles field.
func (o *GetServiceSonarrBySonarrId2XXResponse) SetProfiles(v ServiceProfile) {
	o.Profiles = &v
}

func (o GetServiceSonarrBySonarrId2XXResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Server) {
		toSerialize["server"] = o.Server
	}
	if !isNil(o.Profiles) {
		toSerialize["profiles"] = o.Profiles
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *GetServiceSonarrBySonarrId2XXResponse) UnmarshalJSON(bytes []byte) (err error) {
	varGetServiceSonarrBySonarrId2XXResponse := _GetServiceSonarrBySonarrId2XXResponse{}

	if err = json.Unmarshal(bytes, &varGetServiceSonarrBySonarrId2XXResponse); err == nil {
		*o = GetServiceSonarrBySonarrId2XXResponse(varGetServiceSonarrBySonarrId2XXResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "server")
		delete(additionalProperties, "profiles")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetServiceSonarrBySonarrId2XXResponse struct {
	value *GetServiceSonarrBySonarrId2XXResponse
	isSet bool
}

func (v NullableGetServiceSonarrBySonarrId2XXResponse) Get() *GetServiceSonarrBySonarrId2XXResponse {
	return v.value
}

func (v *NullableGetServiceSonarrBySonarrId2XXResponse) Set(val *GetServiceSonarrBySonarrId2XXResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetServiceSonarrBySonarrId2XXResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetServiceSonarrBySonarrId2XXResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetServiceSonarrBySonarrId2XXResponse(val *GetServiceSonarrBySonarrId2XXResponse) *NullableGetServiceSonarrBySonarrId2XXResponse {
	return &NullableGetServiceSonarrBySonarrId2XXResponse{value: val, isSet: true}
}

func (v NullableGetServiceSonarrBySonarrId2XXResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetServiceSonarrBySonarrId2XXResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


