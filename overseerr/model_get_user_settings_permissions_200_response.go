/*
Overseerr API

This is the documentation for the Overseerr API backend.  Two primary authentication methods are supported:  - **Cookie Authentication**: A valid sign-in to the `/auth/plex` or `/auth/local` will generate a valid authentication cookie. - **API Key Authentication**: Sign-in is also possible by passing an `X-Api-Key` header along with a valid API Key generated by Overseerr. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package overseerr

import (
	"encoding/json"
)

// GetUserSettingsPermissions200Response struct for GetUserSettingsPermissions200Response
type GetUserSettingsPermissions200Response struct {
	Permissions *float32 `json:"permissions,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetUserSettingsPermissions200Response GetUserSettingsPermissions200Response

// NewGetUserSettingsPermissions200Response instantiates a new GetUserSettingsPermissions200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetUserSettingsPermissions200Response() *GetUserSettingsPermissions200Response {
	this := GetUserSettingsPermissions200Response{}
	return &this
}

// NewGetUserSettingsPermissions200ResponseWithDefaults instantiates a new GetUserSettingsPermissions200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetUserSettingsPermissions200ResponseWithDefaults() *GetUserSettingsPermissions200Response {
	this := GetUserSettingsPermissions200Response{}
	return &this
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *GetUserSettingsPermissions200Response) GetPermissions() float32 {
	if o == nil || isNil(o.Permissions) {
		var ret float32
		return ret
	}
	return *o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserSettingsPermissions200Response) GetPermissionsOk() (*float32, bool) {
	if o == nil || isNil(o.Permissions) {
    return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *GetUserSettingsPermissions200Response) HasPermissions() bool {
	if o != nil && !isNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given float32 and assigns it to the Permissions field.
func (o *GetUserSettingsPermissions200Response) SetPermissions(v float32) {
	o.Permissions = &v
}

func (o GetUserSettingsPermissions200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *GetUserSettingsPermissions200Response) UnmarshalJSON(bytes []byte) (err error) {
	varGetUserSettingsPermissions200Response := _GetUserSettingsPermissions200Response{}

	if err = json.Unmarshal(bytes, &varGetUserSettingsPermissions200Response); err == nil {
		*o = GetUserSettingsPermissions200Response(varGetUserSettingsPermissions200Response)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "permissions")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetUserSettingsPermissions200Response struct {
	value *GetUserSettingsPermissions200Response
	isSet bool
}

func (v NullableGetUserSettingsPermissions200Response) Get() *GetUserSettingsPermissions200Response {
	return v.value
}

func (v *NullableGetUserSettingsPermissions200Response) Set(val *GetUserSettingsPermissions200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetUserSettingsPermissions200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetUserSettingsPermissions200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetUserSettingsPermissions200Response(val *GetUserSettingsPermissions200Response) *NullableGetUserSettingsPermissions200Response {
	return &NullableGetUserSettingsPermissions200Response{value: val, isSet: true}
}

func (v NullableGetUserSettingsPermissions200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetUserSettingsPermissions200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


