/*
Overseerr API

This is the documentation for the Overseerr API backend.  Two primary authentication methods are supported:  - **Cookie Authentication**: A valid sign-in to the `/auth/plex` or `/auth/local` will generate a valid authentication cookie. - **API Key Authentication**: Sign-in is also possible by passing an `X-Api-Key` header along with a valid API Key generated by Overseerr. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package overseerr

import (
	"encoding/json"
)

// GetUserSettingsMain200Response struct for GetUserSettingsMain200Response
type GetUserSettingsMain200Response struct {
	Username *string `json:"username,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetUserSettingsMain200Response GetUserSettingsMain200Response

// NewGetUserSettingsMain200Response instantiates a new GetUserSettingsMain200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetUserSettingsMain200Response() *GetUserSettingsMain200Response {
	this := GetUserSettingsMain200Response{}
	return &this
}

// NewGetUserSettingsMain200ResponseWithDefaults instantiates a new GetUserSettingsMain200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetUserSettingsMain200ResponseWithDefaults() *GetUserSettingsMain200Response {
	this := GetUserSettingsMain200Response{}
	return &this
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *GetUserSettingsMain200Response) GetUsername() string {
	if o == nil || isNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserSettingsMain200Response) GetUsernameOk() (*string, bool) {
	if o == nil || isNil(o.Username) {
    return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *GetUserSettingsMain200Response) HasUsername() bool {
	if o != nil && !isNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *GetUserSettingsMain200Response) SetUsername(v string) {
	o.Username = &v
}

func (o GetUserSettingsMain200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Username) {
		toSerialize["username"] = o.Username
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *GetUserSettingsMain200Response) UnmarshalJSON(bytes []byte) (err error) {
	varGetUserSettingsMain200Response := _GetUserSettingsMain200Response{}

	if err = json.Unmarshal(bytes, &varGetUserSettingsMain200Response); err == nil {
		*o = GetUserSettingsMain200Response(varGetUserSettingsMain200Response)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "username")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetUserSettingsMain200Response struct {
	value *GetUserSettingsMain200Response
	isSet bool
}

func (v NullableGetUserSettingsMain200Response) Get() *GetUserSettingsMain200Response {
	return v.value
}

func (v *NullableGetUserSettingsMain200Response) Set(val *GetUserSettingsMain200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetUserSettingsMain200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetUserSettingsMain200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetUserSettingsMain200Response(val *GetUserSettingsMain200Response) *NullableGetUserSettingsMain200Response {
	return &NullableGetUserSettingsMain200Response{value: val, isSet: true}
}

func (v NullableGetUserSettingsMain200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetUserSettingsMain200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


