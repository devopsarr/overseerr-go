/*
Overseerr API

This is the documentation for the Overseerr API backend.  Two primary authentication methods are supported:  - **Cookie Authentication**: A valid sign-in to the `/auth/plex` or `/auth/local` will generate a valid authentication cookie. - **API Key Authentication**: Sign-in is also possible by passing an `X-Api-Key` header along with a valid API Key generated by Overseerr. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package overseerr

import (
	"encoding/json"
)

// GetMovieRatingscombined200ResponseImdb struct for GetMovieRatingscombined200ResponseImdb
type GetMovieRatingscombined200ResponseImdb struct {
	Title *string `json:"title,omitempty"`
	Url *string `json:"url,omitempty"`
	CriticsScore *float32 `json:"criticsScore,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetMovieRatingscombined200ResponseImdb GetMovieRatingscombined200ResponseImdb

// NewGetMovieRatingscombined200ResponseImdb instantiates a new GetMovieRatingscombined200ResponseImdb object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetMovieRatingscombined200ResponseImdb() *GetMovieRatingscombined200ResponseImdb {
	this := GetMovieRatingscombined200ResponseImdb{}
	return &this
}

// NewGetMovieRatingscombined200ResponseImdbWithDefaults instantiates a new GetMovieRatingscombined200ResponseImdb object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetMovieRatingscombined200ResponseImdbWithDefaults() *GetMovieRatingscombined200ResponseImdb {
	this := GetMovieRatingscombined200ResponseImdb{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *GetMovieRatingscombined200ResponseImdb) GetTitle() string {
	if o == nil || isNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMovieRatingscombined200ResponseImdb) GetTitleOk() (*string, bool) {
	if o == nil || isNil(o.Title) {
    return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *GetMovieRatingscombined200ResponseImdb) HasTitle() bool {
	if o != nil && !isNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *GetMovieRatingscombined200ResponseImdb) SetTitle(v string) {
	o.Title = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *GetMovieRatingscombined200ResponseImdb) GetUrl() string {
	if o == nil || isNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMovieRatingscombined200ResponseImdb) GetUrlOk() (*string, bool) {
	if o == nil || isNil(o.Url) {
    return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *GetMovieRatingscombined200ResponseImdb) HasUrl() bool {
	if o != nil && !isNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *GetMovieRatingscombined200ResponseImdb) SetUrl(v string) {
	o.Url = &v
}

// GetCriticsScore returns the CriticsScore field value if set, zero value otherwise.
func (o *GetMovieRatingscombined200ResponseImdb) GetCriticsScore() float32 {
	if o == nil || isNil(o.CriticsScore) {
		var ret float32
		return ret
	}
	return *o.CriticsScore
}

// GetCriticsScoreOk returns a tuple with the CriticsScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMovieRatingscombined200ResponseImdb) GetCriticsScoreOk() (*float32, bool) {
	if o == nil || isNil(o.CriticsScore) {
    return nil, false
	}
	return o.CriticsScore, true
}

// HasCriticsScore returns a boolean if a field has been set.
func (o *GetMovieRatingscombined200ResponseImdb) HasCriticsScore() bool {
	if o != nil && !isNil(o.CriticsScore) {
		return true
	}

	return false
}

// SetCriticsScore gets a reference to the given float32 and assigns it to the CriticsScore field.
func (o *GetMovieRatingscombined200ResponseImdb) SetCriticsScore(v float32) {
	o.CriticsScore = &v
}

func (o GetMovieRatingscombined200ResponseImdb) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !isNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !isNil(o.CriticsScore) {
		toSerialize["criticsScore"] = o.CriticsScore
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *GetMovieRatingscombined200ResponseImdb) UnmarshalJSON(bytes []byte) (err error) {
	varGetMovieRatingscombined200ResponseImdb := _GetMovieRatingscombined200ResponseImdb{}

	if err = json.Unmarshal(bytes, &varGetMovieRatingscombined200ResponseImdb); err == nil {
		*o = GetMovieRatingscombined200ResponseImdb(varGetMovieRatingscombined200ResponseImdb)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "title")
		delete(additionalProperties, "url")
		delete(additionalProperties, "criticsScore")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetMovieRatingscombined200ResponseImdb struct {
	value *GetMovieRatingscombined200ResponseImdb
	isSet bool
}

func (v NullableGetMovieRatingscombined200ResponseImdb) Get() *GetMovieRatingscombined200ResponseImdb {
	return v.value
}

func (v *NullableGetMovieRatingscombined200ResponseImdb) Set(val *GetMovieRatingscombined200ResponseImdb) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMovieRatingscombined200ResponseImdb) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMovieRatingscombined200ResponseImdb) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMovieRatingscombined200ResponseImdb(val *GetMovieRatingscombined200ResponseImdb) *NullableGetMovieRatingscombined200ResponseImdb {
	return &NullableGetMovieRatingscombined200ResponseImdb{value: val, isSet: true}
}

func (v NullableGetMovieRatingscombined200ResponseImdb) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMovieRatingscombined200ResponseImdb) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


