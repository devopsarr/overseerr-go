/*
Overseerr API

This is the documentation for the Overseerr API backend.  Two primary authentication methods are supported:  - **Cookie Authentication**: A valid sign-in to the `/auth/plex` or `/auth/local` will generate a valid authentication cookie. - **API Key Authentication**: Sign-in is also possible by passing an `X-Api-Key` header along with a valid API Key generated by Overseerr. 

API version: v1.34.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package overseerr

import (
	"encoding/json"
)

// checks if the MovieDetailsReleasesResultsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MovieDetailsReleasesResultsInner{}

// MovieDetailsReleasesResultsInner struct for MovieDetailsReleasesResultsInner
type MovieDetailsReleasesResultsInner struct {
	Iso31661 *string `json:"iso_3166_1,omitempty"`
	Rating NullableString `json:"rating,omitempty"`
	ReleaseDates []MovieDetailsReleasesResultsInnerReleaseDatesInner `json:"release_dates,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MovieDetailsReleasesResultsInner MovieDetailsReleasesResultsInner

// NewMovieDetailsReleasesResultsInner instantiates a new MovieDetailsReleasesResultsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMovieDetailsReleasesResultsInner() *MovieDetailsReleasesResultsInner {
	this := MovieDetailsReleasesResultsInner{}
	return &this
}

// NewMovieDetailsReleasesResultsInnerWithDefaults instantiates a new MovieDetailsReleasesResultsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMovieDetailsReleasesResultsInnerWithDefaults() *MovieDetailsReleasesResultsInner {
	this := MovieDetailsReleasesResultsInner{}
	return &this
}

// GetIso31661 returns the Iso31661 field value if set, zero value otherwise.
func (o *MovieDetailsReleasesResultsInner) GetIso31661() string {
	if o == nil || IsNil(o.Iso31661) {
		var ret string
		return ret
	}
	return *o.Iso31661
}

// GetIso31661Ok returns a tuple with the Iso31661 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MovieDetailsReleasesResultsInner) GetIso31661Ok() (*string, bool) {
	if o == nil || IsNil(o.Iso31661) {
		return nil, false
	}
	return o.Iso31661, true
}

// HasIso31661 returns a boolean if a field has been set.
func (o *MovieDetailsReleasesResultsInner) HasIso31661() bool {
	if o != nil && !IsNil(o.Iso31661) {
		return true
	}

	return false
}

// SetIso31661 gets a reference to the given string and assigns it to the Iso31661 field.
func (o *MovieDetailsReleasesResultsInner) SetIso31661(v string) {
	o.Iso31661 = &v
}

// GetRating returns the Rating field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MovieDetailsReleasesResultsInner) GetRating() string {
	if o == nil || IsNil(o.Rating.Get()) {
		var ret string
		return ret
	}
	return *o.Rating.Get()
}

// GetRatingOk returns a tuple with the Rating field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MovieDetailsReleasesResultsInner) GetRatingOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Rating.Get(), o.Rating.IsSet()
}

// HasRating returns a boolean if a field has been set.
func (o *MovieDetailsReleasesResultsInner) HasRating() bool {
	if o != nil && o.Rating.IsSet() {
		return true
	}

	return false
}

// SetRating gets a reference to the given NullableString and assigns it to the Rating field.
func (o *MovieDetailsReleasesResultsInner) SetRating(v string) {
	o.Rating.Set(&v)
}
// SetRatingNil sets the value for Rating to be an explicit nil
func (o *MovieDetailsReleasesResultsInner) SetRatingNil() {
	o.Rating.Set(nil)
}

// UnsetRating ensures that no value is present for Rating, not even an explicit nil
func (o *MovieDetailsReleasesResultsInner) UnsetRating() {
	o.Rating.Unset()
}

// GetReleaseDates returns the ReleaseDates field value if set, zero value otherwise.
func (o *MovieDetailsReleasesResultsInner) GetReleaseDates() []MovieDetailsReleasesResultsInnerReleaseDatesInner {
	if o == nil || IsNil(o.ReleaseDates) {
		var ret []MovieDetailsReleasesResultsInnerReleaseDatesInner
		return ret
	}
	return o.ReleaseDates
}

// GetReleaseDatesOk returns a tuple with the ReleaseDates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MovieDetailsReleasesResultsInner) GetReleaseDatesOk() ([]MovieDetailsReleasesResultsInnerReleaseDatesInner, bool) {
	if o == nil || IsNil(o.ReleaseDates) {
		return nil, false
	}
	return o.ReleaseDates, true
}

// HasReleaseDates returns a boolean if a field has been set.
func (o *MovieDetailsReleasesResultsInner) HasReleaseDates() bool {
	if o != nil && !IsNil(o.ReleaseDates) {
		return true
	}

	return false
}

// SetReleaseDates gets a reference to the given []MovieDetailsReleasesResultsInnerReleaseDatesInner and assigns it to the ReleaseDates field.
func (o *MovieDetailsReleasesResultsInner) SetReleaseDates(v []MovieDetailsReleasesResultsInnerReleaseDatesInner) {
	o.ReleaseDates = v
}

func (o MovieDetailsReleasesResultsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MovieDetailsReleasesResultsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Iso31661) {
		toSerialize["iso_3166_1"] = o.Iso31661
	}
	if o.Rating.IsSet() {
		toSerialize["rating"] = o.Rating.Get()
	}
	if !IsNil(o.ReleaseDates) {
		toSerialize["release_dates"] = o.ReleaseDates
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MovieDetailsReleasesResultsInner) UnmarshalJSON(data []byte) (err error) {
	varMovieDetailsReleasesResultsInner := _MovieDetailsReleasesResultsInner{}

	err = json.Unmarshal(data, &varMovieDetailsReleasesResultsInner)

	if err != nil {
		return err
	}

	*o = MovieDetailsReleasesResultsInner(varMovieDetailsReleasesResultsInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "iso_3166_1")
		delete(additionalProperties, "rating")
		delete(additionalProperties, "release_dates")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMovieDetailsReleasesResultsInner struct {
	value *MovieDetailsReleasesResultsInner
	isSet bool
}

func (v NullableMovieDetailsReleasesResultsInner) Get() *MovieDetailsReleasesResultsInner {
	return v.value
}

func (v *NullableMovieDetailsReleasesResultsInner) Set(val *MovieDetailsReleasesResultsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableMovieDetailsReleasesResultsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableMovieDetailsReleasesResultsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMovieDetailsReleasesResultsInner(val *MovieDetailsReleasesResultsInner) *NullableMovieDetailsReleasesResultsInner {
	return &NullableMovieDetailsReleasesResultsInner{value: val, isSet: true}
}

func (v NullableMovieDetailsReleasesResultsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMovieDetailsReleasesResultsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


