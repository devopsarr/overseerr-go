/*
Overseerr API

This is the documentation for the Overseerr API backend.  Two primary authentication methods are supported:  - **Cookie Authentication**: A valid sign-in to the `/auth/plex` or `/auth/local` will generate a valid authentication cookie. - **API Key Authentication**: Sign-in is also possible by passing an `X-Api-Key` header along with a valid API Key generated by Overseerr. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package overseerr

import (
	"encoding/json"
)

// MediaInfo struct for MediaInfo
type MediaInfo struct {
	Id *float32 `json:"id,omitempty"`
	TmdbId *float32 `json:"tmdbId,omitempty"`
	TvdbId NullableFloat32 `json:"tvdbId,omitempty"`
	// Availability of the media. 1 = `UNKNOWN`, 2 = `PENDING`, 3 = `PROCESSING`, 4 = `PARTIALLY_AVAILABLE`, 5 = `AVAILABLE`
	Status *float32 `json:"status,omitempty"`
	Requests []*MediaRequest `json:"requests,omitempty"`
	CreatedAt *string `json:"createdAt,omitempty"`
	UpdatedAt *string `json:"updatedAt,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MediaInfo MediaInfo

// NewMediaInfo instantiates a new MediaInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMediaInfo() *MediaInfo {
	this := MediaInfo{}
	return &this
}

// NewMediaInfoWithDefaults instantiates a new MediaInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMediaInfoWithDefaults() *MediaInfo {
	this := MediaInfo{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MediaInfo) GetId() float32 {
	if o == nil || isNil(o.Id) {
		var ret float32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaInfo) GetIdOk() (*float32, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MediaInfo) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given float32 and assigns it to the Id field.
func (o *MediaInfo) SetId(v float32) {
	o.Id = &v
}

// GetTmdbId returns the TmdbId field value if set, zero value otherwise.
func (o *MediaInfo) GetTmdbId() float32 {
	if o == nil || isNil(o.TmdbId) {
		var ret float32
		return ret
	}
	return *o.TmdbId
}

// GetTmdbIdOk returns a tuple with the TmdbId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaInfo) GetTmdbIdOk() (*float32, bool) {
	if o == nil || isNil(o.TmdbId) {
    return nil, false
	}
	return o.TmdbId, true
}

// HasTmdbId returns a boolean if a field has been set.
func (o *MediaInfo) HasTmdbId() bool {
	if o != nil && !isNil(o.TmdbId) {
		return true
	}

	return false
}

// SetTmdbId gets a reference to the given float32 and assigns it to the TmdbId field.
func (o *MediaInfo) SetTmdbId(v float32) {
	o.TmdbId = &v
}

// GetTvdbId returns the TvdbId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaInfo) GetTvdbId() float32 {
	if o == nil || isNil(o.TvdbId.Get()) {
		var ret float32
		return ret
	}
	return *o.TvdbId.Get()
}

// GetTvdbIdOk returns a tuple with the TvdbId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaInfo) GetTvdbIdOk() (*float32, bool) {
	if o == nil {
    return nil, false
	}
	return o.TvdbId.Get(), o.TvdbId.IsSet()
}

// HasTvdbId returns a boolean if a field has been set.
func (o *MediaInfo) HasTvdbId() bool {
	if o != nil && o.TvdbId.IsSet() {
		return true
	}

	return false
}

// SetTvdbId gets a reference to the given NullableFloat32 and assigns it to the TvdbId field.
func (o *MediaInfo) SetTvdbId(v float32) {
	o.TvdbId.Set(&v)
}
// SetTvdbIdNil sets the value for TvdbId to be an explicit nil
func (o *MediaInfo) SetTvdbIdNil() {
	o.TvdbId.Set(nil)
}

// UnsetTvdbId ensures that no value is present for TvdbId, not even an explicit nil
func (o *MediaInfo) UnsetTvdbId() {
	o.TvdbId.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *MediaInfo) GetStatus() float32 {
	if o == nil || isNil(o.Status) {
		var ret float32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaInfo) GetStatusOk() (*float32, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MediaInfo) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given float32 and assigns it to the Status field.
func (o *MediaInfo) SetStatus(v float32) {
	o.Status = &v
}

// GetRequests returns the Requests field value if set, zero value otherwise.
func (o *MediaInfo) GetRequests() []*MediaRequest {
	if o == nil || isNil(o.Requests) {
		var ret []*MediaRequest
		return ret
	}
	return o.Requests
}

// GetRequestsOk returns a tuple with the Requests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaInfo) GetRequestsOk() ([]*MediaRequest, bool) {
	if o == nil || isNil(o.Requests) {
    return nil, false
	}
	return o.Requests, true
}

// HasRequests returns a boolean if a field has been set.
func (o *MediaInfo) HasRequests() bool {
	if o != nil && !isNil(o.Requests) {
		return true
	}

	return false
}

// SetRequests gets a reference to the given []MediaRequest and assigns it to the Requests field.
func (o *MediaInfo) SetRequests(v []*MediaRequest) {
	o.Requests = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *MediaInfo) GetCreatedAt() string {
	if o == nil || isNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaInfo) GetCreatedAtOk() (*string, bool) {
	if o == nil || isNil(o.CreatedAt) {
    return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *MediaInfo) HasCreatedAt() bool {
	if o != nil && !isNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *MediaInfo) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *MediaInfo) GetUpdatedAt() string {
	if o == nil || isNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaInfo) GetUpdatedAtOk() (*string, bool) {
	if o == nil || isNil(o.UpdatedAt) {
    return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *MediaInfo) HasUpdatedAt() bool {
	if o != nil && !isNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *MediaInfo) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o MediaInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.TmdbId) {
		toSerialize["tmdbId"] = o.TmdbId
	}
	if o.TvdbId.IsSet() {
		toSerialize["tvdbId"] = o.TvdbId.Get()
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.Requests) {
		toSerialize["requests"] = o.Requests
	}
	if !isNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !isNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *MediaInfo) UnmarshalJSON(bytes []byte) (err error) {
	varMediaInfo := _MediaInfo{}

	if err = json.Unmarshal(bytes, &varMediaInfo); err == nil {
		*o = MediaInfo(varMediaInfo)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "tmdbId")
		delete(additionalProperties, "tvdbId")
		delete(additionalProperties, "status")
		delete(additionalProperties, "requests")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "updatedAt")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMediaInfo struct {
	value *MediaInfo
	isSet bool
}

func (v NullableMediaInfo) Get() *MediaInfo {
	return v.value
}

func (v *NullableMediaInfo) Set(val *MediaInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMediaInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMediaInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMediaInfo(val *MediaInfo) *NullableMediaInfo {
	return &NullableMediaInfo{value: val, isSet: true}
}

func (v NullableMediaInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMediaInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


